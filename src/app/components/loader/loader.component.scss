$body-color: #1D1F20;
$glow-color: #FF0099;
$bg-color: darken($glow-color, 40);


.main-container {
  position: absolute;
  margin: auto;
  left: 0;
  right: 0;
  top: 0;
  width: 100%;
  height: 100%;
  display: flex;
  display: -webkit-flex;
  flex-wrap: wrap;
  -webkit-flex-wrap: wrap;
  align-items: center;
  -webkit-align-items: center;
  align-content: center;
  -webkit-align-content: center;
  justify-content: center;
}

div.grid-bg {

  position: absolute;
  width: 100vw;
  height: 100vh;
  display: flex;
  justify-content: center;
  align-content: center;
  flex-wrap: wrap;
  gap: 2px;
  overflow: hidden;

  &:before {
    content: '';
    position: absolute;
    width: 99%;
    height: 75%;
    background: linear-gradient(#000, #b13ba1, #000);
    animation: flow 6s linear infinite;
  }

  & span.bg {
    position: relative;
    display: block;
    width: calc(6.25vw - 2px);
    height: calc(6.25vw - 2px);
    background: #12123a;
    z-index: 2;
    transition: 1.5s;

    &:hover {
      background: #bf0aa7;
      transition: 0s;
    }
  }
}

.content-box {
  margin-top: auto;
  margin-bottom: auto;
  display: flex;
  display: -webkit-flex;
  flex-wrap: wrap;
  -webkit-flex-wrap: wrap;
  align-items: center;
  -webkit-align-items: center;
  align-content: center;
  -webkit-align-content: center;
  justify-content: center;
  width: 100%;
}


.row-container {
  display: flex;
  flex-direction: row;
}

@mixin grid {
  display: flex;
  flex-wrap: wrap;
  -webkit-flex-wrap: wrap;
  justify-content: center;
  -webkit-justify-content: center;
  align-items: center;
  -webkit-align-items: center;
  align-content: center;
  -webkit-align-content: center;
}

.grid-big {
  @include grid;
  width: 140px;
  height: 140px;
}

.grid-sm {
  @include grid;
  width: 120px;
  height: 140px;
}

.grid-mini {
  @include grid;
  position: absolute;
  margin: auto;
  left: 0;
  right: 0;
  top: auto;
  bottom: 5px;
  width: 25px;
  height: 35px;
}

@mixin cell {
  width: 20px;
  height: 20px;
  background: $bg-color;
  border-radius: 50%;
  opacity: 50%;
  margin: 4px;
}

/* Progress */
.progress {
  background-color: $bg-color;
  position: relative;
  margin: 15px 0;
  height: 30px;
  width: min(70%, 900px);
  opacity: 1;
  border: 2px solid #FF0099;
  border-radius: 5px;
  z-index: 3;
}

.progress-indicator {
  position: absolute;
  margin: auto;
  width: 100%;
  height: 100%;
  left: 0;
  right: 0;
  justify-content: center;
  align-items: center;
  display: flex;
  color: white;
  font-weight: 500;
  font-size: 1.1rem;

  &:after {
    margin-left: 4px;
    content: "0%";
    display: block;
    color: white;
    font-weight: 500;
    font-size: 1.1rem;
    animation-name: countTo100;
    animation-duration: 9650ms;
    animation-fill-mode: forwards;
    animation-timing-function: linear
  }
}

.progress-done {
  box-shadow: 0 3px 3px -5px #F2709C, 0 2px 5px #F2709C;
  background: lighten(#FF0099, 10%);
  color: #fff;
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100%;
  opacity: 1;
  animation-name: fill-width;
  animation-duration: 9650ms;
  animation-fill-mode: forwards;
  animation-timing-function: linear
}

@keyframes fill-width {
  0% {
    width: 0;
  }
  100% {
    width: 100%;
  }
}


@keyframes countTo100 {
  @for $i from 1 through 100 {
    #{$i+ "%"} {
      content: $i + "%";
    }
  }
}

/****** LOADING GRID #1 ******/

$animation-time: 0.2s;
$a-order: (21, 16, 11, 6, 1, 2, 3, 4, 9, 14, 19, 24, 12, 13);

.cell-a {
  @include cell;
}

@for $i from 0 to length($a-order) {
  .cell-a:nth-child(#{nth($a-order, $i+1)}) {
    animation: albi-quick-glow $animation-time unquote((0.1 * $i) + 's') linear forwards;
    -webkit-animation: albi-quick-glow $animation-time unquote((0.1 * $i) + 's') linear forwards;
  }
}

.cell-l {
  @include cell;
}

$l-order: (1, 5, 9, 13, 17, 18, 19);

@for $i from 0 to length($l-order) {
  .cell-l:nth-child(#{nth($l-order, $i+1)}) {
    animation: albi-quick-glow $animation-time unquote((0.1 * $i) + 1.5+ 's') linear forwards;
    -webkit-animation: albi-quick-glow $animation-time unquote((0.1 * $i)+ 1.5 + 's') linear forwards;
  }
}


.cell-b {
  @include cell;
}

$b-order: (21, 16, 11, 6, 1, 2, 3, 4, 9, 14, 13, 12, 19, 24, 23, 22);

@for $i from 0 to length($b-order) {
  .cell-b:nth-child(#{nth($b-order, $i+1)}) {
    animation: albi-quick-glow $animation-time unquote((0.1 * $i) + 2.5+ 's') linear forwards;
    -webkit-animation: albi-quick-glow $animation-time unquote((0.1 * $i)+ 2.5 + 's') linear forwards;
  }
}

.cell-i {
  @include cell;
}

$i-order: (1, 5, 9, 13, 17);

@for $i from 0 to length($i-order) {
  .cell-i:nth-child(#{nth($i-order, $i+1)}) {
    animation: albi-quick-glow $animation-time unquote((0.1 * $i) + 4.0+ 's') linear forwards;
    -webkit-animation: albi-quick-glow $animation-time unquote((0.1 * $i)+ 4.0 + 's') linear forwards;
  }
}

.cell-g {
  @include cell;
}

$g-order: (13, 14, 19, 24, 23, 22, 21, 16, 11, 6, 1, 2, 3, 4);

@for $i from 0 to length($g-order) {
  .cell-g:nth-child(#{nth($g-order, $i+1)}) {
    animation: albi-quick-glow $animation-time unquote((0.1 * $i) + 5+ 's') linear forwards;
    -webkit-animation: albi-quick-glow $animation-time unquote((0.1 * $i)+ 5 + 's') linear forwards;
  }
}

.cell-p {
  @include cell;
}

$p-order: (21, 16, 11, 6, 1, 2, 3, 4, 9, 14, 13, 12);

@for $i from 0 to length($p-order) {
  .cell-p:nth-child(#{nth($p-order, $i+1)}) {
    animation: albi-quick-glow $animation-time unquote((0.1 * $i) + 6.5+ 's') linear forwards;
    -webkit-animation: albi-quick-glow $animation-time unquote((0.1 * $i)+ 6.5 + 's') linear forwards;
  }
}

.cell-t {
  @include cell;
}

$t-order: (1, 2, 3, 4, 5, 8, 13, 18, 23);

@for $i from 0 to length($t-order) {
  .cell-t:nth-child(#{nth($t-order, $i+1)}) {
    animation: albi-quick-glow $animation-time unquote((0.1 * $i) + 8+ 's') linear forwards;
    -webkit-animation: albi-quick-glow $animation-time unquote((0.1 * $i)+ 8 + 's') linear forwards;
  }
}

@keyframes albi-quick-glow {
  100% {
    z-index: 99;
    background: $glow-color;
    box-shadow: 0 0 10px 2px $glow-color;
    opacity: 100%;
  }
}

@media screen and (max-width: 942px) {
  .row-container {
    margin-top: 15px;
  }
}

@media screen and (max-width: 535px) {
  div[class^="cell-"] {
    width: 10px;
    height: 10px;
    margin: 2px;
  }

  .grid-big {
    width: 70px;
    height: 70px;
  }

  .grid-sm {
    width: 60px;
    height: 70px;
  }
}

@media screen and (max-width: 360px) {
  .progress-indicator {
    font-size: 1rem;
  }

  div.grid-bg {
    & span.bg {
      width: calc(22vw - 2px);
      height: calc(22vw - 2px);
    }
  }
}


@media screen and (max-width: 900px) {
  div.grid-bg {
    & span.bg {
      width: calc(10vw - 2px);
      height: calc(10vw - 2px);
    }
  }
}



@keyframes flow {
  0% {
    transform: translateY(-110%);
  }
  100% {
    transform: translateY(110%);
  }
}
